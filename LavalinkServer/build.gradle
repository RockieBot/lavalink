import org.apache.tools.ant.filters.ReplaceTokens

apply plugin: 'application'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.gorylenko.gradle-git-properties'
apply plugin: 'org.ajoberstar.grgit'
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: "com.adarshr.test-logger"

description = 'Play audio to discord voice channels'
mainClassName = "lavalink.server.Launcher"
version = "0.0.1"
ext {
    moduleName = 'Lavalink-Server'
}

bootJar {
    archiveName = "Lavalink.jar"
}

sourceCompatibility = targetCompatibility = 11

bootRun {
    //compiling tests during bootRun increases the likelihood of catching broken tests locally instead of on the CI
    dependsOn compileTestJava

    //pass in custom jvm args
    // source: https://stackoverflow.com/a/25079415
    // example: ./gradlew bootRun -PjvmArgs="--illegal-access=debug -Dwhatever=value"
    if (project.hasProperty('jvmArgs')) {
        jvmArgs project.jvmArgs.split('\\s+')
    }
}

dependencies {
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: kotlinVersion

    // Audio Sending
    compile group: 'moe.kyokobot.koe', name: 'ext-udpqueue', version: koeVersion
    compile (group: 'moe.kyokobot.koe', name: 'core', version: koeVersion) {
        // This version of SLF4J does not recognise Logback 1.2.3
        exclude group: "org.slf4j", module: "slf4j-api"
    }

    // Transport
    compile "io.netty:netty-transport-native-epoll:$nettyEpollVersion:linux-x86_64"

    // Audio Player
    compile group: 'com.github.WearifulCupid0', name: 'lavaplayer', version: lavaplayerVersion
    compile group: 'com.sedmelluq', name: 'lavaplayer-ext-youtube-rotator', version: lavaplayerIpRotatorVersion

    // Filters
    compile group: 'com.github.natanbc', name: 'lavadsp', version: lavaDspVersion

    // Spring
    compile group: 'org.springframework', name: 'spring-websocket', version: springWebSocketVersion
    compile(group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: springBootVersion) {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-undertow', version: springBootVersion

    // Logging and Statistics
    compile group: 'ch.qos.logback', name: 'logback-classic', version: logbackVersion
    compile group: 'io.sentry', name: 'sentry-logback', version: sentryLogbackVersion
    compile group: 'io.prometheus', name: 'simpleclient', version: prometheusVersion
    compile group: 'io.prometheus', name: 'simpleclient_hotspot', version: prometheusVersion
    compile group: 'io.prometheus', name: 'simpleclient_logback', version: prometheusVersion
    compile group: 'io.prometheus', name: 'simpleclient_servlet', version: prometheusVersion

    // Native System Stuff
    compile group: 'com.github.oshi', name: 'oshi-core', version: oshiVersion

    // idk Json
    compile group: 'org.json', name: 'json', version: jsonOrgVersion
    compile group: 'com.google.code.gson', name: 'gson', version: gsonVersion

    // Idk test stuff?
    compileOnly group: 'com.github.spotbugs', name: 'spotbugs-annotations', version: spotbugsAnnotationsVersion
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: springBootVersion
}

processResources {
    //inject values into app.properties
    filesMatching("**/app.properties") {
        filter ReplaceTokens, tokens: [
                "project.version"   : project.version,
                "project.groupId"   : project.group,
                "project.artifactId": project.ext.moduleName,
                "env.BUILD_NUMBER"  : (System.getenv('CI') ? System.getenv('BUILD_NUMBER') : 'Unofficial'),
                "env.BUILD_TIME"    : System.currentTimeMillis() + ''
        ]
    }
}

build {
    doLast {
        println 'Version: ' + version
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}